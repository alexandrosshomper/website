name: Build and Deploy (Stage & Production) to FTP

on:
  push:
    branches: [master, staging]
permissions:
  contents: read

concurrency:
  group: deploy-${{ github.ref_name }}
  cancel-in-progress: true
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Trust host key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SFTP_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Deploy on STAGE via rsync over SSH
        if: github.ref == 'refs/heads/staging'
        uses: burnett01/rsync-deployments@7.1.0
        with:
          switches: -avzr --delete --exclude='.htpasswd' # mirror contents; remove stale files inside target
          path: build/ # trailing slash = CONTENTS of build/
          remote_path: /customers/3/6/f/alexandrosshomper.de/httpd.www/stage/
          remote_host: ${{ secrets.FTP_SERVER }} # ssh.alexandrosshomper.de
          remote_user: ${{ secrets.FTP_USER }} # alexandrosshomper.de
          remote_key: ${{ secrets.SFTP_PRIVATE_KEY }} # gha_deploy_ed25519 (no passphrase)
      - name: Re-apply staging .htaccess
        if: ${{ github.ref_name == 'staging' }}
        uses: burnett01/rsync-deployments@7.1.0
        with:
          switches: -avzr # NOTE: no --delete here
          path: stage-public/.htaccess # file in your repo
          remote_path: /customers/3/6/f/alexandrosshomper.de/httpd.www/stage/
          remote_host: ${{ secrets.FTP_SERVER }}
          remote_user: ${{ secrets.FTP_USER }}
          remote_key: ${{ secrets.SFTP_PRIVATE_KEY }}
      - name: Deploy on PRODUCTION via rsync over SSH
        if: github.ref == 'refs/heads/master'
        uses: burnett01/rsync-deployments@7.1.0
        with:
          switches: -avzr --delete # mirror contents; remove stale files inside target
          path: build/ # trailing slash = CONTENTS of build/
          remote_path: /customers/3/6/f/alexandrosshomper.de/httpd.www/production/
          remote_host: ${{ secrets.FTP_SERVER }} # ssh.alexandrosshomper.de
          remote_user: ${{ secrets.FTP_USER }} # alexandrosshomper.de
          remote_key: ${{ secrets.SFTP_PRIVATE_KEY }} # gha_deploy_ed25519 (no passphrase)
